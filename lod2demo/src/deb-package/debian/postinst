#!/bin/sh
# postinst script for lod2demo
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# some script code copied from virtuoso init.d script
# With this code we can correctly verify if the virtuoso server is running
DAEMON=/usr/bin/virtuoso-t
VIRTUOSOVERSION=virtuoso-opensource-6.1
SHORTNAME=virtuoso
PIDFILE=/var/run/$VIRTUOSOVERSION.pid

running_pid() {
# Check if a given process pid's cmdline matches a given name
    pid=$1
    name=$2
    [ -z "$pid" ] && return 1
    [ ! -d /proc/$pid ] &&  return 1
    cmd=`cat /proc/$pid/cmdline | tr "\000" "\n"|head -n 1 |cut -d : -f 1`
    # Is this the expected server
    [ "$cmd" != "$name" ] &&  return 1
    return 0
}

running() {
# Check if the process is running looking at /proc
# (works for all users)

    # No pidfile, probably no daemon present
    [ ! -f "$PIDFILE" ] && return 1
    pid=`cat $PIDFILE`
    running_pid $pid $DAEMON || return 1
    return 0
}

# end virtuoso 


case "$1" in
    configure)

	### VIRTUOSO CONFIG
	virtetc="/etc/${VIRTUOSOVERSION}/"
	virtvar="/var/lib/${VIRTUOSOVERSION}/"
	virtuosoini="$virtetc/virtuoso.ini"

	# stop the server
	sudo service ${VIRTUOSOVERSION} stop

	# add ontowiki directory to DirsAllowed
	# try to remove the addition first in order to avoid double entries
	sed 's/^\(DirsAllowed.*\)\(, \/var\/lib\/lod2demo\)\(.*\)/\1\3/' -i $virtuosoini
	sed 's/^\(DirsAllowed.*\)/\1, \/var\/lib\/lod2demo/' -i $virtuosoini

	# restart the server
	sudo service ${VIRTUOSOVERSION} start
	
        wait

	while [ ! running ]; do
		sudo service ${VIRTUOSOVERSION} start ;
		wait ;
	done;
		
	if running; then
		sudo isql-vt 1111 dba dba /var/lib/lod2demo/load.sql;
		wait ;
        else 
		exit 1;
	fi

	# create a upload directory
	test -d /tmp/uploads || sudo mkdir /tmp/uploads
	sudo chmod 777 /tmp/uploads 

    ;;
    

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#
echo "---- ending postinst $@"

exit 0
